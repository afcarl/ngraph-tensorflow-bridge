sudo:  required

language:  cpp

services:
 - docker

#dist:  trusty

#addons:
#  apt:
#    sources:
#      - ubuntu-toolchain-r-test
#    packages:
#      - wget
#      - pkg-config

#env:
 #- TF_NG_MODEL_DATASET=resnet20-cifar10 
 #- TF_NG_EPOCHS=1
 - NGRAPH_VLOG_LEVEL=0

before_install:
 - sudo -E apt-get install python-numpy python-dev python-pip python-wheel
# - git clone --depth=50 https://github.com/NervanaSystems/ngraph-tensorflow.git /home/travis/build/ngraph-tensorflow  # used with ./run-premerge-ci-checks.sh only
 - git clone https://github.com/NervanaSystems/ngraph-tensorflow.git # original

 - sudo -E apt-get install python-virtualenv
 - virtualenv --system-site-packages ~/tensorflow
 - source ~/tensorflow/bin/activate
 - easy_install -U pip
 - pip install --upgrade tensorflow
 - cd ngraph-tensorflow
 - git checkout ngraph-tensorflow-preview-0
 # Normally, these are done with a configure script. 
 - export CC_OPT_FLAGS="-march=native"
 - export USE_DEFAULT_PYTHON_LIB_PATH=1
 - export TF_ENABLE_XLA=1
 - export TF_NEED_MKL=0
 - export TF_DOWNLOAD_MKL=0
 - export TF_NEED_JEMALLOC=1
 - export TF_NEED_GCP=0
 - export TF_NEED_HDFS=0
 - export TF_NEED_VERBS=0
 - export TF_NEED_OPENCL=0
 - export TF_NEED_CUDA=0
 - export TF_NEED_MPI=0

 - wget https://github.com/bazelbuild/bazel/releases/download/0.3.1/bazel_0.3.1-linux-x86_64.deb
 - sha256sum -c tools/bazel_0.3.1-linux-x86_64.deb.sha256
 - sudo dpkg -i bazel_0.3.1-linux-x86_64.deb

# - bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package
 - bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

 - cd test/ci/docker
 - docker build -t travis_ci_image -f Dockerfile.ngtf-bridge-ci .
 - cd ..

install: true

script:
# This is the long run.
# - ./docker-run-ngtf-bridge-validation-test.sh travis_ci_test
 - ./run-unit-tests.sh
# - ./run-premerge-ci-checks.sh /home/travis/build/ngraph-tensorflow


branches:
 only:
#  - "master"
  - "kims_ngraph_1666"
